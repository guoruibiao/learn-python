模块

模块(Module)，是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句。

说白了，它就是一堆函数和类的统一存放的文件。

我们上一节学习了函数相关的内容，随着时间的累计，我们肯定写了很多很多个的函数，这个时候不可避免的会出现重名的情况。

那Python怎么去识别我们要调用哪一个方法呢？答案就是把同名的函数放到不同的模块中，然后以  模块.函数名 的方式进行调用。

举个现实中的例子：
    一年一度的初升高考试结束了，宏力学校录取了两个叫王二的同学。这时候如果把他俩分配在一个班级，那上课的时候可不得乱套了？
    老师上课点名了，喊了一声“张三”，叫张三的答了声“到”。喊了一声“王二”，这俩叫王二的都喊“到”。这可能还不算严重的，如果有一个王二触犯了校规，
    要被开除了。没分清是哪个王二的话，那可是不行的。
    
    所以一个王二被分到了，高一1班，另一个叫王二的分配到了高一3班。这时候就算是某个王二犯错了，老师只需要喊“高一1班的（或者高一3班的）”王二，明天把你家长叫过来。
    
模块在一定程度上就可以起到这么个作用。方便我们去维护写过的众多函数。


在Python中，我们对模块有一个简单的分类：
  1. 标准库      也就是安装了Python就可以使用的
  2. 第三方库    一般是额外安装的模块，比如通过pip或者setup_tools工具安装的
  
接下来的章节，我们就分别来看看他俩的区别吧。